% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sqids.R
\name{sqids}
\alias{sqids}
\alias{unsqids}
\title{Generate random-looking IDs from integer ranks}
\usage{
sqids(
  x,
  .salt = sample.int(1000, 3),
  .ties = c("sequential", "min", "max", "dense")
)

unsqids(x)
}
\arguments{
\item{x}{For \code{sqids()}, a vector to rank.
You can leave this argument missing to refer to the "current" row number
in 'dplyr' verbs.

For \code{unsqids()}, a character vector of IDs.}

\item{.salt}{Integers to use with each value of \code{x} to generate IDs.}

\item{.ties}{Method to rank duplicate values.
One of \code{"sequential"}, \code{"min"}, \code{"max"}, or \code{"dense"}.
See \code{ties} argument of \code{\link[vctrs:vec_rank]{vctrs::vec_rank()}} for more details.}
}
\value{
For \code{sqids()}, a character vector of IDs.

For \code{unsqids()}, integers.
}
\description{
\code{sqids()} is an alternative to \code{\link[dplyr:row_number]{dplyr::row_number()}}
that generates random-looking IDs from integer ranks
using \href{https://sqids.org/}{Sqids (formerly Hashids)}.

IDs that generated with \code{sqids()} can be easily decoded back into
the original ranks using \code{unsqids()}.
}
\examples{
ids <- sqids(c(5, 1, 3, 2, 2, NA))
ids
unsqids(ids)

df <- data.frame(
  grp = c(1, 1, 1, 2, 2, 2, 3, 3, 3)
)
# You can use `sqids()` without referencing `x` in dplyr verbs.
dplyr::mutate(df, sqids = sqids(), row_id = unsqids(sqids))
# Use `.ties` to control how to rank duplicate values.
dplyr::mutate(df, sqids = sqids(grp, .ties = "min"), grp_id = unsqids(sqids))
# When you need to generate the same IDs for each group, fix the `.salt`:
dplyr::mutate(df, sqids = sqids(.salt = 1234L), .by = grp)
}
\seealso{
\href{https://github.com/sqids/sqids-cpp}{sqids/sqids-cpp}
}
